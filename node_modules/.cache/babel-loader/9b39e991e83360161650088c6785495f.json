{"ast":null,"code":"var _jsxFileName = \"/home/yatharths/Desktop/Projects/redux-app/src/InterviewsShow.js\";\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport InterviewsList from './InterviewsList';\nimport { fetchInterviews } from './actions';\nimport PropTypes from 'prop-types';\n\nclass InterviewShow extends React.Component {\n  render() {\n    console.log(this.props.match.params.id);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }\n    }, \"hello Worlds\");\n  }\n\n}\n\nInterviewsPage.propType = {\n  interviews: PropTypes.array.isRequired,\n  fetchInterviews: PropTypes.func.isRequired\n};\n{\n  /* step 7 - Gives shape of array to local interviews variable */\n}\n\nfunction mapStateToProps(state) {\n  // console.log(state.interviews);\n  {\n    /* step 6 - assign state[\"\"the fetched data\"\"](recived from reducer to local variable */\n  }\n  return {\n    interviews: state.interviews\n  };\n}\n\nexport default connect(mapStateToProps, {\n  fetchInterviews\n})(InterviewShow);\n{\n  /* step 2 this statement mounts fetchInterviews(actions.js) to InterviewShow Class and passes control in InterviewShow Class */\n}","map":{"version":3,"sources":["/home/yatharths/Desktop/Projects/redux-app/src/InterviewsShow.js"],"names":["React","useEffect","useState","Link","connect","InterviewsList","fetchInterviews","PropTypes","InterviewShow","Component","render","console","log","props","match","params","id","InterviewsPage","propType","interviews","array","isRequired","func","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAO,WAAP;AACA,SAAQC,IAAR,QAAoB,kBAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAAQC,eAAR,QAA8B,WAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,aAAN,SAA4BR,KAAK,CAACS,SAAlC,CAA2C;AACzCC,EAAAA,MAAM,GAAE;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAApC;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ;AAKD;;AAR0C;;AAW3CC,cAAc,CAACC,QAAf,GAAyB;AACvBC,EAAAA,UAAU,EAAEZ,SAAS,CAACa,KAAV,CAAgBC,UADL;AAEvBf,EAAAA,eAAe,EAAEC,SAAS,CAACe,IAAV,CAAeD;AAFT,CAAzB;AAIA;AAAC;AAAiE;;AAElE,SAASE,eAAT,CAAyBC,KAAzB,EAA+B;AAC7B;AACA;AAAC;AAAyF;AAC1F,SAAM;AACJL,IAAAA,UAAU,EAAEK,KAAK,CAACL;AADd,GAAN;AAGD;;AACD,eAAef,OAAO,CAACmB,eAAD,EAAkB;AAACjB,EAAAA;AAAD,CAAlB,CAAP,CAA4CE,aAA5C,CAAf;AACA;AAAC;AAAgI","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport {Link} from  'react-router-dom';\nimport {connect} from 'react-redux';\nimport InterviewsList from './InterviewsList'\nimport {fetchInterviews} from './actions'\nimport PropTypes from 'prop-types';\n\nclass InterviewShow extends React.Component{\n  render(){\n  console.log(this.props.match.params.id);\n  return (\n      <div>\n        hello Worlds  \n    </div>\n  );\n}\n}\n\nInterviewsPage.propType ={\n  interviews: PropTypes.array.isRequired,\n  fetchInterviews: PropTypes.func.isRequired\n} \n{/* step 7 - Gives shape of array to local interviews variable */}\n\nfunction mapStateToProps(state){\n  // console.log(state.interviews);\n  {/* step 6 - assign state[\"\"the fetched data\"\"](recived from reducer to local variable */}\n  return{\n    interviews: state.interviews\n  }\n}\nexport default connect(mapStateToProps, {fetchInterviews})(InterviewShow);\n{/* step 2 this statement mounts fetchInterviews(actions.js) to InterviewShow Class and passes control in InterviewShow Class */}"]},"metadata":{},"sourceType":"module"}